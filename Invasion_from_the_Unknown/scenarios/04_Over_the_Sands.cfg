[scenario]
	#textdomain wesnoth-Invasion_from_the_Unknown
	id=04_Over_the_Sands
	name= _ "Over the Sands"
	{MAP 04_Over_the_Sands.map}
	{TURNS 73 70 68}
	victory_when_enemies_defeated=no
	next_scenario=05_Crossfire

	{DAWN1}
	{MORNING1}
	{MIDDAY1}
	{AFTERNOON1}
	{DUSK1}
	{SHORTDARK}
	{DAWN2}
	{MORNING2}
	{MIDDAY2}
	{AFTERNOON2}
	{DUSK2}
	{LONGDARK1}
	{LONGDARK2}
	{LONGDARK3}
	{LONGDARK4}

	[time_area]
		{UNDERGROUND}
		x=77-80,75-76
		y=36-40,37-40
	[/time_area]

	{SCENARIO_MUSIC "knolls.ogg"}
	{DEATHS_COMMON}

	{STORYTXT_OVER_THE_SANDS}
	{STORYMAP_OVER_THE_SANDS}

	[side]
		type=Elvish Hero
		description=Galas
		user_description= _ "Galas"
		unrenamable=yes
		side=1
		canrecruit=1
		controller=human
		team_name=heroes
		shroud=yes
		fog=yes
	[/side]

	# Orcs that hold the river fort
	[side]
		type=Orcish Warrior
		description=Karun Baghar
		user_description= _ "Karun Baghar"
		canrecruit=1
		side=2
		unrenamable=yes
		[ai]
			{ATTACK_DEPTH 2 3 4}
			caution=0.2
			recruitment_pattern=scout,fighter,archer,fighter,archer
			[target]
				side=1
				value=10
			[/target]
			# Ignore beasts
			[target]
				side=5
				value=0
			[/target]
			[target]
				side=6
				value=0
			[/target]
		[/ai]
		{GOLD 75 100 125}
		{QUANTITY recruit
				(Orcish Grunt,Wolf Rider,Orcish Archer,Orcish Assassin,Orcish Warrior)
				(Orcish Warrior,Wolf Rider,Orcish Archer,Orcish Slayer,Orcish Crossbowman)
				(Orcish Warrior,Wolf Rider,Orcish Slayer,Orcish Crossbowman)
		}
		team_name=savage_orcs
	[/side]

	# Outlaws close to side 1's goal area
	[side]
		side=3
		no_leader=yes
		team_name=savage_outlaws
		recruit=Footpad,Thief,Thug,Poacher,Trapper,Outlaw,Rogue
		{INCOME 1 2 3}
		[ai]
			{ATTACK_DEPTH 2 3 4}
			grouping=no
			agggression=0.7
			caution=0.3
			{AI_TARGET (side=1) 10}
			{AI_TARGET (side=2) 1}
			{AI_TARGET (side=4) 1}
			{AI_TARGET (side=5) 1}
			{AI_TARGET (side=6) 1}
			{AI_TARGET (side=7) 1}
			{AI_TARGET (side=8) 1}
		[/ai]
	[/side]

	# Side 4, outlaws in the mountains - they act like pests which the
	# player is not supposed to have to defeat in order to reach the goal;
	# nevertheless, I designed the map to be difficult to get them :)
	[side]
		type=Outlaw
		gender=female
		description=Lana
		user_description= _ "Lana"
		canrecruit=1
		side=4
		unrenamable=yes
		recruit=Footpad,Thief,Thug,Poacher,Trapper,Outlaw,Rogue
		[ai]
			{ATTACK_DEPTH 2 3 4}
			# Would just delay them with all that high terrain
			grouping=no
			agggression=0.5
			caution=0.3
			village_value=0.1
			{AI_TARGET (side=1) 10}
			{AI_TARGET (side=2) 1}
			{AI_TARGET (side=3) 1}
			{AI_TARGET (side=5) 1}
			{AI_TARGET (side=6) 1}
			{AI_TARGET (side=7) 1}
			{AI_TARGET (side=8) 1}
			{AI_TARGET (side=9) 1}
		[/ai]
		{GOLD 80 100 120}
		# Base income
		{INCOME 3 3 4}
		team_name=savage_outlaws
	[/side]

	# No campaign is complete without a gryphon leader :P
	[side]
		type=Gryphon
		canrecruit=1
		side=5
		team_name=griffions
		unrenamable=yes
		[ai]
			grouping=no
			# they are more intelligent and less aggressive - no villages for them
			caution=0.6
			agggression=0.2
			village_value=0.0
			{AI_TARGET (side=1) 10}
			{AI_TARGET (side=2) 1}
			{AI_TARGET (side=3) 1}
			{AI_TARGET (side=4) 1}
			{AI_TARGET (side=6) 1}
			{AI_TARGET (side=7) 1}
			{AI_TARGET (side=8) 1}
			{AI_TARGET (side=9) 1}
		[/ai]
		{GOLD 40 80 120}
		{INCOME 4 5 6}
	[/side]

	# Roaming beasts that shall be dehydrated
	[side]
		side=6
		no_leader=yes
		shroud=no
		fog=no
		team_name=roaming_foes
		[ai]
			grouping=no
			aggression=0.9
			village_value=0.0
			caution=0.0
			[target]
				side=1
				value=10
			[/target]
			# Hunt in packs, of course.
			{ATTACK_DEPTH 4 5 6}
			# Be unfriendly to all but griffions
			{AI_TARGET (side=1) 3}
			{AI_TARGET (side=2) 3}
			{AI_TARGET (side=3) 3}
			{AI_TARGET (side=4) 3}
			{AI_TARGET (side=5) 1}
		[/ai]
	[/side]

	#undead side, used to control wandering ghosts
	[side]
		no_leader=yes
		side=7
		controller=ai
		shroud=no
		fog=no
		team_name=roaming_foes
		[ai]
			aggression=1.0
			caution=0.0
			recruitment_pattern=fighter,fighter,archer
			grouping=no

			{ATTACK_DEPTH 2 3 4}

			{AI_TARGET (side=1) 3}
			{AI_TARGET (side=2) 1}
			{AI_TARGET (side=3) 1}
			{AI_TARGET (side=4) 1}
			{AI_TARGET (side=5) 1}
		[/ai]
	[/side]

	# Roaming beasts that won't be dehydrated
	[side]
		side=8
		no_leader=yes
		shroud=no
		fog=no
		team_name=roaming_foes
		[ai]
			grouping=no
			aggression=0.9
			village_value=0.0
			caution=0.0
			# Hunt in packs, of course.
			{ATTACK_DEPTH 4 5 6}
			[target]
				side=1
				value=10
			[/target]
			# Be unfriendly to all but griffions
			{AI_TARGET (side=1) 3}
			{AI_TARGET (side=2) 3}
			{AI_TARGET (side=3) 3}
			{AI_TARGET (side=4) 3}
			{AI_TARGET (side=5) 1}
		[/ai]
	[/side]

	# Roaming beasts that shall be dehydrated
	[side]
		side=9
		no_leader=yes
		shroud=no
		fog=no
		team_name=roaming_foes
		[ai]
			grouping=no
			aggression=0.9
			village_value=0.0
			caution=0.0
			[target]
				side=1
				value=10
			[/target]
			# Hunt in packs, of course.
			{ATTACK_DEPTH 4 5 6}
			# Be unfriendly to all but griffions
			{AI_TARGET (side=1) 3}
			{AI_TARGET (side=2) 3}
			{AI_TARGET (side=3) 3}
			{AI_TARGET (side=4) 3}
			{AI_TARGET (side=5) 1}
		[/ai]
	[/side]

# This sets up some unit variables for sides that
# will suffer thirst
#define SETUP_ENEMY_THIRST SIDE THIRST
	[store_unit]
		variable=enemy
		kill=yes
		[filter]
			side={SIDE}
		[/filter]
	[/store_unit]
	{FOREACH enemy i}
		{VARIABLE enemy[$i].variables.dehydration {THIRST}}
		{VARIABLE enemy[$i].variables.full_hitpoints $enemy[$i].hitpoints}
		{VARIABLE enemy[$i].variables.max_hitpoints $enemy[$i].max_hitpoints}
		[unstore_unit]
			variable=enemy[$i]
			find_vacant=no
		[/unstore_unit]
	{NEXT i}
#enddef

#define INIT_HYDRATION_FOR_PLAYER_UNIT
	{VARIABLE player_unit.variables.full_hitpoints $player_unit.hitpoints}
	{VARIABLE player_unit.variables.max_hitpoints $player_unit.max_hitpoints}
	{VARIABLE player_unit.variables.dehydration 0}
	[unstore_unit]
		variable=player_unit
		find_vacant=no
	[/unstore_unit]
#enddef

# macro for all hydration effects to all units stored in
# a variable called "affected_unit"
# EFFECT > 0 is dehydration
# EFFECT = 0 is silent rehydration
# EFFECT < 0 is rehydration with notification

#define APPLY_HYDRATION_EFFECT EFFECT
	{FOREACH affected_unit i}
		{VARIABLE effect {EFFECT}}
		{VARIABLE thirst $affected_unit[$i].variables.dehydration}
		{VARIABLE hp_to_regain 0}
		# are we dehydrating or rehydrating?
		[if]
			[variable]
				name=effect
				greater_than=0
			[/variable]
			[then]
				{VARIABLE_OP thirst add 1}
				{VARIABLE green -30}
				{VARIABLE_OP green multiply $thirst}
				{VARIABLE_OP green add 280}
				[if]
					[variable]
						name=green
						less_than=0
					[/variable]
					[then]
						{VARIABLE green 0}
					[/then]
				[/if]
				{VARIABLE red 250}
				{VARIABLE blue 52}
			[/then]
			[else]
				# rehydrate
				{VARIABLE hp_to_regain $thirst}
				{VARIABLE_OP hp_to_regain multiply 2}
				{VARIABLE red 170}
				{VARIABLE green 230}
				{VARIABLE blue 245}
				[if]
					[variable]
						name=hp_to_regain
						{QUANTITY greater_than 8 4 4}
					[/variable]
					[then]
						{VARIABLE hp_to_regain {DIFF 8 4 4} }
					[/then]
				[/if]
				# make rehydrate silent if the unit isn't
				# suffering dehydration
				[if]
					[variable]
						name=thirst
						less_than=1
					[/variable]
					[then]
						{VARIABLE effect 0}
					[/then]
				[/if]
				{VARIABLE thirst 0}
			[/else]
		[/if]
		# modify attacks
		{FOREACH affected_unit[$i].attack j}
			[if]
				[variable]
					name=affected_unit[$i].attack[$j].range
					equals=melee
				[/variable]
				[then]
					{VARIABLE damage_multiplier 10}
				[/then]
				[else]
					{VARIABLE damage_multiplier 20}
				[/else]
			[/if]
			{VARIABLE damage_divisor $damage_multiplier}
			{VARIABLE_OP damage_multiplier add -$thirst}
			# store real_damage
			[if]
				[variable]
					name=affected_unit[$i].attack[$j].real_damage
					greater_than=0
				[/variable]
				[else]
					{VARIABLE affected_unit[$i].attack[$j].real_damage $affected_unit[$i].attack[$j].damage}
				[/else]
			[/if]
			{VARIABLE new_damage $affected_unit[$i].attack[$j].real_damage}
			{VARIABLE_OP new_damage multiply $damage_multiplier}
			{VARIABLE_OP new_damage divide $damage_divisor}
			[if]
				[variable]
					name=new_damage
					less_than=1
				[/variable]
				[then]
					{VARIABLE new_damage 1}
				[/then]
			[/if]
			{VARIABLE affected_unit[$i].attack[$j].damage $new_damage}
		{NEXT j}
		# adjust current hp
		[if]
			[variable]
				name=thirst
				greater_than=0
			[/variable]
			[then]
				{VARIABLE_OP affected_unit[$i].hitpoints add -$dehydration_loss}
				{VARIABLE_OP affected_unit[$i].max_hitpoints add -$dehydration_loss}
				{VARIABLE affected_unit[$i].variables.dehydration $thirst}
			[/then]
			[else]
#ifdef HARD
#else
				{VARIABLE_OP affected_unit[$i].hitpoints add $hp_to_regain}
#endif
				{VARIABLE affected_unit[$i].max_hitpoints $affected_unit[$i].variables.max_hitpoints}
				{VARIABLE affected_unit[$i].variables.dehydration 0}
			[/else]
		[/if]
		{VARIABLE hp_check $affected_unit[$i].hitpoints}
		# check hp
		[if]
			[variable]
				name=hp_check
				less_than=1
			[/variable]
			[then]
				{VARIABLE affected_unit[$i].hitpoints 1}
			[/then]
		[/if]
		[if]
			[variable]
				name=effect
				greater_than=0
			[/variable]
			[then]
				[unstore_unit]
					variable=affected_unit[$i]
					find_vacant=no
					red,green,blue=$red,$green,$blue
					text= _ "thirst"
				[/unstore_unit]
			[/then]
			[else]
				[if]
					[variable]
						name=effect
						not_equals=0
					[/variable]
					[then]
						[unstore_unit]
							variable=affected_unit[$i]
							find_vacant=no
							red,green,blue=$red,$green,$blue
							text= _ "refreshed"
						[/unstore_unit]
					[/then]
					[else]
						# silent unstore
						[unstore_unit]
							variable=affected_unit[$i]
							find_vacant=no
						[/unstore_unit]
					[/else]
				[/if]
			[/else]
		[/if]
	{NEXT i}
	{CLEAR_VARIABLE hp_check}
	{CLEAR_VARIABLE thirst}
	{CLEAR_VARIABLE hp_to_regain}
	{CLEAR_VARIABLE damage_multiplier}
	{CLEAR_VARIABLE damage_divisor}
	{CLEAR_VARIABLE new_damage}
	{CLEAR_VARIABLE green}
	{CLEAR_VARIABLE red}
	{CLEAR_VARIABLE blue}
#enddef

#define BAT X Y
	[unit]
		type=Vampire Bat
		side=6
		x={X}
		y={Y}
		upkeep=loyal
		[modification]
			{TRAIT_UNDEAD}
		[/modification]
	[/unit]
#enddef

	# Starting villages set-up
	{STARTING_VILLAGES 1 5}
	{STARTING_VILLAGES 2 10}
	{STARTING_VILLAGES 3 15}
	{STARTING_VILLAGES 4 10}

	[event]
		name=prestart
		# Recall heroes
		[recall]
			description=Analia
			x,y=75,38
		[/recall]
		[recall]
			description=Mal Keshar
			x,y=76,36
		[/recall]

		# Create beasts:
		# Wolves
		{ANONYMOUS_GUARD Wolf 9 58 23}
		{ANONYMOUS_GUARD Wolf 9 69 36}
		{ANONYMOUS_GUARD Wolf 9 72 33}
		{DIFF_NORMAL_OR_HARD {ANONYMOUS_GUARD Wolf 9 66 35}}
		{DIFF_NORMAL_OR_HARD {ANONYMOUS_GUARD Wolf 9 69 32}}
		{DIFF_NORMAL_OR_HARD {ANONYMOUS_GUARD Wolf 9 74 32}}
		{DIFF_HARD {ANONYMOUS_GUARD Wolf 9 66 31}}
		{DIFF_HARD {ANONYMOUS_GUARD Wolf 9 63 38}}
		{DIFF_HARD {ANONYMOUS_GUARD Wolf 9 65 34}}
		{ANONYMOUS_GUARD Wolf 9 50 15}
		{ANONYMOUS_GUARD Wolf 9 42 10}
		{ANONYMOUS_GUARD Wolf 9 42 4}
		{ANONYMOUS_GUARD Wolf 9 48 7}
		{ANONYMOUS_GUARD Wolf 9 25 8}
		{ANONYMOUS_GUARD Wolf 9 24 8}
		{ANONYMOUS_GUARD Wolf 9 26 8}
		{DIFF_NORMAL_OR_HARD {ANONYMOUS_GUARD Wolf 9 24 7}}
		{ANONYMOUS_GUARD Wolf 9 14 16}
		{SETUP_ENEMY_THIRST 9 {DIFF 2 1 1} }
		
		# also need to apply thirst right away
		[store_unit]
			variable=affected_unit
			kill=no
			[filter]
				side=9
			[/filter]
		[/store_unit]
		{APPLY_HYDRATION_EFFECT 1}

		# Scorpions in the sands
		{ANONYMOUS_GUARD (Giant Scorpion) 8 61 26}
		{ANONYMOUS_GUARD (Giant Scorpion) 8 60 30}
		{ANONYMOUS_GUARD (Giant Scorpion) 8 70 20}
		{ANONYMOUS_GUARD (Giant Scorpion) 8 65 23}
		{ANONYMOUS_GUARD (Giant Scorpion) 8 71 13}
		{ANONYMOUS_GUARD (Giant Scorpion) 8 59 10}
		{ANONYMOUS_GUARD (Giant Scorpion) 8 52 4}
		{ANONYMOUS_GUARD (Giant Scorpion) 8 46 12}
		{ANONYMOUS_GUARD (Giant Scorpion) 8 20 12}
		{ANONYMOUS_GUARD (Giant Scorpion) 8 20 17}
		{ANONYMOUS_GUARD (Giant Scorpion) 8 33 5}

		# Mudcrawlers in the Arkan-Thoria canyon
		{ANONYMOUS_GUARD (Mudcrawler) 8 53 3}
		{ANONYMOUS_GUARD {DIFF (Mudcrawler) (Giant Mudcrawler) (Giant Mudcrawler)} 8 45 1}
		{ANONYMOUS_GUARD (Mudcrawler) 8 58 2}
		{ANONYMOUS_GUARD {DIFF (Mudcrawler) (Giant Mudcrawler) (Giant Mudcrawler)} 8 63 4}
		{ANONYMOUS_GUARD (Mudcrawler) 8 41 1}
		{ANONYMOUS_GUARD {DIFF (Mudcrawler) (Giant Mudcrawler) (Giant Mudcrawler)} 8 40 1}
		{ANONYMOUS_GUARD (Mudcrawler) 8 29 1}
		{ANONYMOUS_GUARD {DIFF (Mudcrawler) (Giant Mudcrawler) (Giant Mudcrawler)} 8 27 2}
		{ANONYMOUS_GUARD (Mudcrawler) 8 14 2}
		{ANONYMOUS_GUARD (Giant Mudcrawler) 8 14 4}
		{ANONYMOUS_GUARD (Mudcrawler) 8 12 3}
		{ANONYMOUS_GUARD (Giant Mudcrawler) 8 16 3}

		# Bats
		{BAT 9 8}
		{BAT 11 16}
		{BAT 13 17}
		{BAT 17 15}
		{BAT 20 17}
		{BAT 32 3}
		{BAT 44 11}
		{BAT 53 23}
		{BAT 60 36}

		# Initialize variables
		{VARIABLE met_outlaws 0}
		{VARIABLE met_orcs 0}
		{VARIABLE met_ogres 0}
		{VARIABLE about_elf 0}
		# dehydration loss - a variable for the dialogue
		{VARIABLE dehydration_loss 2}
		{VARIABLE ghosts_talk 0}
		# setup ghost difficulty
		{VARIABLE max_ghosts {DIFF 6 7 8} }
		{VARIABLE max_per_turn {DIFF 1 2 3} }

		[objectives]
			side=1
			{OBJECTIVE_TO_WIN ( _ "Galas, Analia or Mal Keshar must reach the North-west border of the map")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Galas")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Analia")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Mal Keshar")}
			{OBJECTIVE_TO_LOSE ( _ "Turns run out")}
		[/objectives]
	[/event]

	[event]
		name=start
		{MSG_UNIT (Mal Keshar) ( _ "Here you are, the outside. Not too different from the last report of some years ago... or centuries, I don't know.")}
		{MSG_UNIT Galas ( _ "Everything is so... dry... There is no plant that could grow up under this heat!")}
		{MSG_UNIT Analia ( _ "That is why our people moved to that valley, to protect themselves from death in the desert. Not all of them found the valley, though. We have always wondered what happened to them.")}
		{MSG_UNIT (Mal Keshar) ( _ "From what I know, they could only die in the desert. Be it not for the harsh suns, the lack of water and food, it would be at hands of foul savage orcs or nomadic bandits.")}
		{MSG_UNIT Galas ( _ "I suppose so. But, where are we? Ancient explorations are useless in this desert, that could have been a forest before the Fall.")}
		{MSG_UNIT (Mal Keshar) ( _ "If I remember correctly, we are approaching to Longlier, the River of Bones.")}
		{MSG_UNIT Analia ( _ "A river? Great, then we could renew our water supplies there.")}
		{MSG_UNIT (Mal Keshar) ( _ "I doubt that. It has been dried up by the suns, and if water remains, it is not pure. Living beings don't last much without water, so you must fill the supplies in this oasis before departing towards Northwest.")}

		# Rewriten message -> explains new dehydration rules
		[message]
			speaker=narrator
			message= _ "During the daytime (Dawn, Morning, Mid-day, Afternoon, and Dusk) at the beginning of each your turns, every unit in a sand, road, rubble or sand dune hex will suffer from thirst. Each turn of thirst reduces a unit's attack damage and causes $dehydration_loss hitpoints of dehydration damage that cannot be healed by your shamans or druids. Only by refreshing at an oasis (any shallow water hex) at the start of your turn will your units regain full attack strength and some of the lost hitpoints."
			image=wesnoth-icon.png
		[/message]

		{MSG_UNIT Galas ( _ "Fair enough, let's go.")}
	[/event]

	# Orcs sighted by elf
	[event]
		name=sighted
		[filter]
			side=2
		[/filter]
		[filter_second]
			side=1
			race=elf
		[/filter_second]
		{REDRAW}
		{VARIABLE about_elf 1}

		[message]
			speaker=unit
			message= _ "Ah? Elves? I must be hallucinating again..."
		[/message]

		[message]
			speaker=second_unit
			message= _ "This doesn't look good..."
		[/message]

		[message]
			speaker=unit
			message= _ "But I never had hallucinations that could speak. Intruders! And they are elves! Go get'em!"
		[/message]

		[message]
			speaker=Galas
			message= _ "Anyone who dares oppose us shall perish, does not matter if it's orc or human."
		[/message]

		[message]
			speaker=Mal Keshar
			message= _ "Orcs... good. It has been a long time since I defeated one myself!"
		[/message]

		[message]
			speaker=Galas
			message= _ "We could ignore them and continue our journey, but I'm not sure if it would be a good idea."
		[/message]

		[if]
			[variable]
				name=met_orcs
				numerical_not_equals=1
			[/variable]
			[then]
				{VARIABLE met_orcs 1}
				{ADD_GOLD 2 50 100 150}
			[/then]
		[/if]
	[/event]

	# Orcs sighted by undead
	[event]
		name=sighted
		[filter]
			side=2
		[/filter]
		[filter_second]
			side=1
			race=undead
			[or]
				race=bats
			[/or]
		[/filter_second]
		{REDRAW}

		[message]
			speaker=unit
			message= _ "Undead! Everyone, to arms! It's an invasion!"
		[/message]

		[message]
			speaker=Mal Keshar
			message= _ "Somebody should catch that idiot and cut his tongue. Now that he has given alarm to his friends we'll have to deal with them!"
		[/message]

		[if]
			[variable]
				name=met_orcs
				numerical_not_equals=1
			[/variable]
			[then]
				{VARIABLE met_orcs 1}
				{ADD_GOLD 2 50 100 150}
			[/then]
		[/if]
	[/event]

	# Scorpion sighted
	[event]
		name=sighted
		[filter]
			type=Giant Scorpion
		[/filter]
		{REDRAW}

		[message]
			speaker=second_unit
			message= _ "Ah? What is that thing?"
		[/message]

		[message]
			speaker=Analia
			message= _ "It is a scorpion, inhabitants of the sands. Beware, their tail has a poisonous claw that could tresspass your heart in a second."
		[/message]
	[/event]

	# Mudcrawler sighted
	[event]
		name=sighted
		[filter]
			type=Giant Mudcrawler,Mudcrawler
		[/filter]
		{REDRAW}

		[message]
			speaker=unit
			message= _ "Rooaargh!!"
		[/message]

		[message]
			speaker=second_unit
			message= _ "I have seen odd things in my life, but that is just ridiculous! A crawling glob of mud?"
		[/message]

		[message]
			speaker=Mal Keshar
			message= _ "Crawling yes, but it is not a simple glob of mud, but one animated by magic means. Although they are not specially tough, if you get surrounded by a pack of them you will have serious trouble."
		[/message]
	[/event]

#define OGRE_PLACEMENT
	{VARIABLE met_ogres 1}
	{RANDOM_PLACEMENT_AREA 34 13 2}

	{PLACE_UNITS_RANDOMLY 3 6 "Young Ogre" "Hunting Ogre" ( _ "Hunting Ogre") ( ai_special="guardian"
																				random_traits="no")}
	{PLACE_UNITS_RANDOMLY 2 6 "Ogre"       "Hunting Ogre" ( _ "Hunting Ogre") ( ai_special="guardian"
																				random_traits="no")}
	{CLEAR_PLACEMENT_AREA}
	{VARIABLE ogre_thirst {DIFF (3) (1) (-1)} }
	
	{SETUP_ENEMY_THIRST 6 $ogre_thirst}
		
	# also need to apply thirst right away
	[store_unit]
		variable=affected_unit
		kill=no
		[filter]
			side=6
			x=32-36
			y=11-15
		[/filter]
	[/store_unit]
	{APPLY_HYDRATION_EFFECT 1}
#enddef

	# Ogres ambush elves
	[event]
		name=moveto
		[filter]
			race=elf
			[and]
				side=1
				x=31-38
				y=11-18
			[/and]
		[/filter]
		[if]
			{VARIABLE_NUM_EQUALS met_ogres 0}
			[then]
				{REDRAW}
				{VARIABLE about_elf 1}
				{OGRE_PLACEMENT}
				[message]
					type=Ogre,Young Ogre
					message= _ "Me thinks hungry be. Elves be tasty, yes. Tasty will eaten be."
				[/message]
		
				[message]
					speaker=second_unit
					message= _ "I don't really think I taste good. Uh-oh."
				[/message]
			[/then]
		[/if]
	[/event]

	# Ogre *intend* to ambush undead
	[event]
		name=moveto
		[filter]
			race=undead
			[or]
				race=bats
			[/or]
			[and]
				side=1
				x=31-38
				y=11-18
			[/and]
		[/filter]
		[if]
			{VARIABLE_NUM_EQUALS met_ogres 0}
			[then]
				{REDRAW}
				{OGRE_PLACEMENT}
				[message]
					type=Ogre,Young Ogre
					message= _ "Aaah, undeady! I crack you will do!"
				[/message]
		
				[message]
					speaker=Mal Keshar
					message= _ "We'll see about that."
				[/message]
			[/then]
		[/if]
	[/event]

	# Side 3 outlaws (NW), approaching them
	[event]
		name=moveto
		[filter]
			side=1
			x=8-16
			y=2-6
		[/filter]
		{RANDOM_PLACEMENT_AREA 13 5 3}

		{VARIABLE met_outlaws 1}

		# Awake side 3, and give it a leader
		[modify_side]
			side=3
			{GOLD 100 125 150}
		[/modify_side]

		[unit]
			type=Highwayman
			description=Glen
			user_description= _ "Glen"
			canrecruit=1
			side=3
			unrenamable=yes
			x,y=4,6
		[/unit]

		# Ambush the player
		{VARIABLE ambush_poachers {DIFF 1 2 2} }
		{VARIABLE ambush_footpads {DIFF 2 3 4} }
		{VARIABLE ambush_thugs {DIFF 1 2 3} }
		{VARIABLE ambush_bandits {DIFF 0 1 2} }
		{VARIABLE ambush_trappers 1}

		{PLACE_UNITS_RANDOMLY $ambush_footpads 3 "Footpad" "Outlaw ambusher" (_"Outlaw ambusher") ()}
		{PLACE_UNITS_RANDOMLY $ambush_trappers 3 "Trapper" "Outlaw ambusher" (_"Outlaw ambusher") ()}
		{PLACE_UNITS_RANDOMLY $ambush_thugs    3 "Thug"    "Outlaw ambusher" (_"Outlaw ambusher") ()}
		{PLACE_UNITS_RANDOMLY $ambush_poachers 3 "Poacher" "Outlaw ambusher" (_"Outlaw ambusher") ()}
		{PLACE_UNITS_RANDOMLY $ambush_bandits  3 "Bandit"  "Outlaw ambusher" (_"Outlaw ambusher") ()}

		{CLEAR_PLACEMENT_AREA}
		{CLEAR_VARIABLE ambush_poachers}
		{CLEAR_VARIABLE ambush_footpads}
		{CLEAR_VARIABLE ambush_thugs}
		{CLEAR_VARIABLE ambush_bandits}
		{CLEAR_VARIABLE ambush_trappers}

		{SETUP_ENEMY_THIRST 2 0}

		[print]
			text=_"Ambushed!"
			red,green,blue=255,0,0
			size=32
        [/print]

		{REDRAW}

		[role]
			side=3
			canrecruit=0
			role=filthy
		[/role]

		[message]
			role=filthy
			message= _ "Ha ha ha! I got you! There is no escapatory now!"
		[/message]

		[if]
			{VARIABLE_LEXICAL_EQUALS (unit.race) (elf)}
			[or]
				[not]
					{VARIABLE_LEXICAL_EQUALS (unit.race) (bats)}
				[/not]
				[not]
					{VARIABLE_LEXICAL_EQUALS (unit.type) (Ghoul)}
				[/not]
				[not]
					{VARIABLE_LEXICAL_EQUALS (unit.type) (Necrophage)}
				[/not]
				[not]
					{VARIABLE_LEXICAL_EQUALS (unit.type) (Ghastl)}
				[/not]
				[not]
					{VARIABLE_LEXICAL_EQUALS (unit.type) (Walking Corpse)}
				[/not]
				[not]
					{VARIABLE_LEXICAL_EQUALS (unit.type) (Soulless)}
				[/not]
			[/or]
			[then]
				[message]
					speaker=unit
					message= _ "Aaah! Yelp!"
				[/message]
			[/then]
		[/if]

		[if]
			[have_unit]
				race=elf
				x=8-16
				y=2-6
			[/have_unit]
			[then]
				{VARIABLE about_elf 1}
				[message]
					role=filthy
					message= _ "Hey, wait, is that an elf? I thought they were long gone from the face of earth!"
				[/message]

				[message]
					side=2
					canrecruit=0
					[not]
						role=filthy
					[/not]
					message= _ "I did too, but it seems these pointy-eared demons are impossible to get rid of."
				[/message]

				[message]
					role=filthy
					message= _ "It matters little now. Kill it!"
				[/message]
			[/then]
			[else]
				[if]
					[have_unit]
						race=undead
						x=8-16
						y=2-6
					[/have_unit]
					[or]
						[have_unit]
							race=bats
							x=8-16
							y=2-6
						[/have_unit]
					[/or]
					[then]
						[message]
							role=filthy
							message= _ "Undead! These damned abominations pursue us again!"
						[/message]
		
						[message]
							side=2
							[not]
								role=filthy
							[/not]
							message= _ "Then we'll have to get rid of them once for all."
						[/message]
					[/then]
				[/if]
			[/else]
		[/if]

		[message]
			speaker=Analia
			message= _ "They are blocking our path to the north west following the river's stream. We must defeat them before continuing."
		[/message]

		[objectives]
			side=1
			summary= _ "New objectives:"
			{OBJECTIVE_TO_WIN ( _ "Defeat the leader of the bandits who control the north-western area")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Galas")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Analia")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Mal Keshar")}
			{OBJECTIVE_TO_LOSE ( _ "Turns run out")}
		[/objectives]
	[/event]

	[event]
		name=die
		[filter]
			side=3
			canrecruit=1
		[/filter]

		[message]
			speaker=unit
			message= _ "Ouch! Puny weakling, you won't beat meee..."
		[/message]

		[message]
			speaker=second_unit
			message= _ "Uh... looks like I did."
		[/message]

		[message]
			speaker=second_unit
			message= _ "These bandits seem to have accumulated some gold. It's not a great amount, but it will do for our needs."
		[/message]

		{RETRIEVE_GOLD {DIFF 120 110 100}}

		{VARIABLE met_outlaws 2}

		[objectives]
			side=1
			{OBJECTIVE_TO_WIN ( _ "Galas, Analia or Mal Keshar must reach the North-west border of the map")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Galas")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Analia")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Mal Keshar")}
			{OBJECTIVE_TO_LOSE ( _ "Turns run out")}
		[/objectives]
	[/event]

	[event]
		name=die
		[filter]
			side=2
			canrecruit=1
		[/filter]

		[message]
			speaker=unit
			message= _ "Argh! I'm vanquished!"
		[/message]

		[message]
			speaker=second_unit
			message= _ "This orc kept some gold in his tent. These must be difficult times for them, since it is not more than a few dozens, but it is better than nothing."
		[/message]

		{RETRIEVE_GOLD {DIFF 45 40 36}}
	[/event]

	# Victory event triggerer
	[event]
		name=moveto
		first_time_only=no
		[filter]
			side=1
			x,y=1,1-3
		[/filter]

		[if]
			[have_unit]
				description=Mal Keshar
				x,y=1,1-3
			[/have_unit]
			[or]
				[have_unit]
					description=Galas
					x,y=1,1-3
				[/have_unit]
			[/or]
			[or]
				[have_unit]
					description=Analia
					x,y=1,1-3
				[/have_unit]
			[/or]
			[then]
				[if]
					[variable]
						name=met_outlaws
						numerical_not_equals=1
					[/variable]
					[then]
						[message]
							speaker=unit
							message= _ "The river's bottom carves a canyon to the northwest."
						[/message]
				
						[message]
							speaker=Mal Keshar
							message= _ "We must follow it from outside, for I don't know how it goes up to the mountains."
						[/message]
				
						{ENDLEVEL_VICTORY yes}
					[/then]
					[else]
						[message]
							speaker=unit
							message= _ "We can't continue before defeating these bandits first!"
						[/message]
					[/else]
				[/if]
			[/then]
		[/if]
	[/event]

	# store full_hitpoints at start, recruit and on advance
	[event]
		name=start
		[store_unit]
			variable=player_unit
			kill=no
			[filter]
				x=1-80
				y=1-40
				[not]
					race=undead
				[/not]
			[/filter]
		[/store_unit]
		{FOREACH player_unit i}
			{VARIABLE player_unit[$i].variables.full_hitpoints $player_unit[$i].hitpoints}
			{VARIABLE player_unit[$i].variables.max_hitpoints $player_unit[$i].max_hitpoints}
			[debug_message]
				message="Storing $player_unit[$i].max_hitpoints full hitpoints for $player_unit[$i].user_description"
			[/debug_message]
			{VARIABLE player_unit[$i].variables.dehydration 0}
			[unstore_unit]
				variable=player_unit[$i]
				find_vacant=no
			[/unstore_unit]
		{NEXT i}
	[/event]

	[event]
		name=recruit
		first_time_only=no
		[store_unit]
			variable=player_unit
			kill=no
			[filter]
				x=$x1
				y=$y1
				[not]
					race=undead
				[/not]
			[/filter]
		[/store_unit]
		{INIT_HYDRATION_FOR_PLAYER_UNIT}
	[/event]

	[event]
		name=post_advance
		first_time_only=no
		[store_unit]
			[filter]
				x=$x1
				y=$y1
				[not]
					race=undead
				[/not]
			[/filter]
			variable=player_unit
			kill=yes
		[/store_unit]
		{INIT_HYDRATION_FOR_PLAYER_UNIT}
	[/event]

	# Adjust max_hitpoints just before healing
	# to make sure the dehydration damage
	# doesn't heal, then restore max_hitpoints
	# on the next select event to show the
	# dehydration damage
	[event]
		name=side turn
		first_time_only=no
		[if]
			[variable]
				name=side_number
				equals=1
			[/variable]
			[then]
				[store_unit]
					variable=player_unit
					kill=no
					[filter]
						side=1
						x=1-80
						y=1-40
						[not]
							race=undead
						[/not]
					[/filter]
				[/store_unit]
				{FOREACH player_unit i}
					{VARIABLE thirst $player_unit[$i].variables.dehydration}
					[if]
						[variable]
							name=thirst
							greater_than=0
						[/variable]
						[then]
							{VARIABLE_OP thirst multiply -$dehydration_loss}
							{VARIABLE_OP thirst add $player_unit[$i].variables.max_hitpoints}
							[debug_message]
								message="Lower max hitpoints for $player_unit[$i].user_description from $player_unit[$i].variables.max_hitpoints to $thirst"
							[/debug_message]
							{VARIABLE player_unit[$i].max_hitpoints $thirst}
						[/then]
					[/if]
					[unstore_unit]
						variable=player_unit[$i]
						find_vacant=no
					[/unstore_unit]
				{NEXT i}
			[/then]
		[/if]
		# event on next turn refresh
		# that reapplies max hitpoints - for representational purposes
		[event]
			name=turn refresh
			[store_unit]
				variable=player_unit
				kill=no
				[filter]
					side=1
					x=1-80
					y=1-40
					[not]
						race=undead
					[/not]
				[/filter]
			[/store_unit]
			{FOREACH player_unit i}
				{VARIABLE hp_check $player_unit[$i].variables.max_hitpoints}
				[if]
					[variable]
						name=hp_check
						greater_than=0
					[/variable]
					[then]
						{VARIABLE player_unit[$i].max_hitpoints $hp_check}
					[/then]
				[/if]
				[unstore_unit]
					variable=player_unit[$i]
					find_vacant=no
				[/unstore_unit]
			{NEXT i}
		[/event]
	[/event]

	[event]
		name=new turn
		first_time_only=no
		# dehydration:
		# only at dawn, morning, mid-day, afternoon and dusk
		[store_unit]
			[filter]
				[not]
					race=undead
				[/not]
				[not]
					type=Giant Scorpion
				[/not]
				[not]
					type=Mudcrawler
				[/not]
				[not]
					type=Giant Mudcrawler
				[/not]
				[not]
				# prevent AI units from being depleted
				# by hydration before the player shows up
				ai_special=guardian
				[/not]
				[filter_location]
					terrain=Hd,Dd,R*,Dd^Dr,Uu
					[not]
						time_of_day=chaotic
					[/not]
				[/filter_location]
			[/filter]
			kill=no
			variable=affected_unit
		[/store_unit]
		{APPLY_HYDRATION_EFFECT 1}
	[/event]

	# Rehydration on water or swamp terrain
	[event]
		name=new turn
		first_time_only=no
		[store_unit]
			[filter]
				[not]
					race=undead
				[/not]
				[not]
					type=Giant Scorpion
				[/not]
				[not]
					type=Dust Devil
				[/not]
				[filter_location]
					terrain=W*,Ss,Dd^Do
				[/filter_location]
			[/filter]
			kill=no
			variable=affected_unit
		[/store_unit]
		{APPLY_HYDRATION_EFFECT -1}
	[/event]

	[event]
		name=victory
		# Rehydrate all units for the next scenario
		[store_unit]
			variable=affected_unit
			kill=no
			[filter]
				side=1
				x=1-80
				y=1-40
				[not]
					race=undead
				[/not]
			[/filter]
		[/store_unit]
		# silent rehydration
		{APPLY_HYDRATION_EFFECT 0}
		{FOREACH affected_unit i}
			{CLEAR_VARIABLE affected_unit[$i].variables.full_hitpoints}
			{CLEAR_VARIABLE affected_unit[$i].variables.max_hitpoints}
			{CLEAR_VARIABLE affected_unit[$i].variables.dehydration}
			[unstore_unit]
				find_vacant=no
				variable=affected_unit[$i]
			[/unstore_unit]
		{NEXT i}

		# Galas wonders
		[if]
			[variable]
				name=about_elf
				numerical_equals=1
			[/variable]
			[then]
				{MSG_UNIT Galas ( _ "Something disturbs me. These sand dwellers talk about our race like if they had met us recently. After all these centuries, shouldn't they have at least forgotten our name?")}
				{MSG_UNIT Analia ( _ "I think so, and I wonder too what they mean. But anyway, we should not let small questions such as this delay us any further. We have a mission to complete, and time is critical for it.")}
			[/then]
		[/if]

		{CLEAR_VARIABLE met_outlaws}
		{CLEAR_VARIABLE met_orcs}
		{CLEAR_VARIABLE about_elf}

		{VICTORY_MUSIC}
	[/event]

#undef APPLY_HYDRATION_EFFECT
#undef INIT_HYDRATION_FOR_PLAYER_UNIT
#undef SETUP_ENEMY_THIRST
#undef BAT
[/scenario]
