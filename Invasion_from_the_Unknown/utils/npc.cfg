#textdomain wesnoth-Invasion_from_the_Unknown

#define IS_NPC
	[ai]
		ai_algorithm=idle_ai
	[/ai]
#enddef

#define NPC_SIDE SIDE
	[side]
		colour=pink
		gold=0
		income=-2
		recruit=""
		side={SIDE}
		controller=ai
		{IS_NPC}
		no_leader=yes
		team_name=npc_team
	[/side]
#enddef

#define NPC_HOSTILE_SIDE SIDE
	[side]
		side={SIDE}
		controller=ai
		[ai]
			#makes them focus on the player
			[target]
				side=1
				value=5
			[/target]
			aggression=1.0
			leader_value=0
			village_value=0
			protect_leader=0
			grouping=no
			caution=0.1
			simple_targetting=yes
		[/ai]
		no_leader=yes
		team_name=npc_team
	[/side]
#enddef

#define NPC TYPE X Y SIDE
	{RANDOM 1..2}
	[if]
		[variable]
			name=random
			less_than=2
		[/variable]
		[then]
			{RANDOM_TRAIT_UNIT (
				generate_description=no
				type={TYPE}
				x,y={X},{Y}
				side={SIDE}
				ai_special=guardian
			)}
		[/then]
		[else]
			{RANDOM_TRAIT_UNIT (
				generate_description=no
				type={TYPE}
				x,y={X},{Y}
				side={SIDE}
				ai_special=guardian
				facing=sw
			)}
		[/else]
	[/if]
	{CLEAR_VARIABLE random}
#enddef

#define NPC_BIRD_BEHAVIOR SIDE TOP BOTTOM LEFT RIGHT
	[event]
		name=new turn
		first_time_only=no
		[store_unit]
			[filter]
				type=Crow,Falcon
				side={SIDE}
			[/filter]
			variable=birds
		[/store_unit]

		{FOREACH birds i}
	
			[set_variable]
				name=j
				value=0
			[/set_variable]

			{VARIABLE_OP x to_variable birds[$i].x}
			{VARIABLE_OP y to_variable birds[$i].y}
			{RANDOM 1..4}

			[if]
				[variable]
					name=random
					equals=1
				[/variable]
				[then]
					{MOVE_BIRD_NORTH {TOP}}
					{MOVE_BIRD_NORTH {TOP}}
					{MOVE_BIRD_NORTH {TOP}}
					{MOVE_BIRD_NORTH {TOP}}
					{MOVE_BIRD_NORTH {TOP}}
					{MOVE_BIRD_NORTH {TOP}}
					{MOVE_BIRD_NORTH {TOP}}
				[/then]
			[/if]
			[if]
				[variable]
					name=random
					equals=2
				[/variable]
				[then]
					{MOVE_BIRD_SOUTH {BOTTOM}}
					{MOVE_BIRD_SOUTH {BOTTOM}}
					{MOVE_BIRD_SOUTH {BOTTOM}}
					{MOVE_BIRD_SOUTH {BOTTOM}}
					{MOVE_BIRD_SOUTH {BOTTOM}}
					{MOVE_BIRD_SOUTH {BOTTOM}}
					{MOVE_BIRD_SOUTH {BOTTOM}}
				[/then]
			[/if]
			[if]
				[variable]
					name=random
					equals=3
				[/variable]
				[then]
					{MOVE_BIRD_WEST {LEFT}}
					{MOVE_BIRD_WEST {LEFT}}
					{MOVE_BIRD_WEST {LEFT}}
					{MOVE_BIRD_WEST {LEFT}}
					{MOVE_BIRD_WEST {LEFT}}
					{MOVE_BIRD_WEST {LEFT}}
					{MOVE_BIRD_WEST {LEFT}}
				[/then]
			[/if]
			[if]
				[variable]
					name=random
					equals=4
				[/variable]
				[then]
					{MOVE_BIRD_EAST {RIGHT}}
					{MOVE_BIRD_EAST {RIGHT}}
					{MOVE_BIRD_EAST {RIGHT}}
					{MOVE_BIRD_EAST {RIGHT}}
					{MOVE_BIRD_EAST {RIGHT}}
					{MOVE_BIRD_EAST {RIGHT}}
					{MOVE_BIRD_EAST {RIGHT}}
				[/then]
			[/if]
		{NEXT i}

		[unstore_unit]
			variable=birds
		[/unstore_unit]

		{CLEAR_VARIABLE x}
		{CLEAR_VARIABLE y}
		{CLEAR_VARIABLE birds}
	[/event]
#enddef

#define MOVE_BIRD_NORTH TOP
	[if]
		[variable]
			name=y
			numerical_equals={TOP}
		[/variable]
		[then]
			[kill]
				x=$x
				y=$y
			[/kill]
		[/then]
		[else]
			{VARIABLE_OP tempy to_variable y}
			{VARIABLE_OP tempy add -1}
			[if]
				[have_unit]
					x=$x
					y=$tempy
				[/have_unit]
				[else]
					[teleport]
						[filter]
							x=$x
							y=$y
						[/filter]
						x=$x
						y=$tempy
					[/teleport]
					[delay]
						time=20
					[/delay]
					{VARIABLE_OP birds[$i].moves add -1}
					{VARIABLE_OP birds[$i].y to_variable tempy}
					{VARIABLE_OP y to_variable tempy}
				[/else]
			[/if]
		[/else]
	[/if]
#enddef
#define MOVE_BIRD_SOUTH BOTTOM
	[if]
		[variable]
			name=y
			numerical_equals={BOTTOM}
		[/variable]
		[then]
			[kill]
				x=$x
				y=$y
			[/kill]
		[/then]
		[else]
			{VARIABLE_OP tempy to_variable y}
			{VARIABLE_OP tempy add 1}
			[if]
				[have_unit]
					x=$x
					y=$tempy
				[/have_unit]
				[else]
					[teleport]
						[filter]
							x=$x
							y=$y
						[/filter]
						x=$x
						y=$tempy
					[/teleport]
					[delay]
						time=20
					[/delay]
					{VARIABLE_OP birds[$i].moves add -1}
					{VARIABLE_OP birds[$i].y to_variable tempy}
					{VARIABLE_OP y to_variable tempy}
				[/else]
			[/if]
		[/else]
	[/if]
#enddef
#define MOVE_BIRD_WEST LEFT
	[if]
		[variable]
			name=x
			numerical_equals={LEFT}
		[/variable]
		[then]
			[kill]
				x=$x
				y=$y
			[/kill]
		[/then]
		[else]
			[store_unit]
				[filter]
					x=$x
					y=$y
				[/filter]
				variable=bird
			[/store_unit]
			{VARIABLE bird.facing sw}
			[unstore_unit]
				variable=bird
			[/unstore_unit]
			{CLEAR_VARIABLE bird}
			{VARIABLE_OP tempx to_variable x}
			{VARIABLE_OP tempx add -1}
			[if]
				[have_unit]
					x=$tempx
					y=$y
				[/have_unit]
				[else]
					[teleport]
						[filter]
							x=$x
							y=$y
						[/filter]
						x=$tempx
						y=$y
					[/teleport]
					[delay]
						time=20
					[/delay]
					{VARIABLE_OP birds[$i].moves add -1}
					{VARIABLE_OP birds[$i].x to_variable tempx}
					{VARIABLE_OP x to_variable tempx}
				[/else]
			[/if]
		[/else]
	[/if]
#enddef
#define MOVE_BIRD_EAST RIGHT
	[if]
		[variable]
			name=x
			numerical_equals={RIGHT}
		[/variable]
		[then]
			[kill]
				x=$x
				y=$y
			[/kill]
		[/then]
		[else]
			[store_unit]
				[filter]
					x=$x
					y=$y
				[/filter]
				variable=bird
			[/store_unit]
			{VARIABLE bird.facing se}
			[unstore_unit]
				variable=bird
			[/unstore_unit]
			{CLEAR_VARIABLE bird}
			{VARIABLE_OP tempx to_variable x}
			{VARIABLE_OP tempx add 1}
			[if]
				[have_unit]
					x=$tempx
					y=$y
				[/have_unit]
				[else]
					[teleport]
						[filter]
							x=$x
							y=$y
						[/filter]
						x=$tempx
						y=$y
					[/teleport]
					[delay]
						time=20
					[/delay]
					{VARIABLE_OP birds[$i].moves add -1}
					{VARIABLE_OP birds[$i].x to_variable tempx}
					{VARIABLE_OP x to_variable tempx}
				[/else]
			[/if]
		[/else]
	[/if]
#enddef
