#textdomain wesnoth-UInvasion

#define SOUND_LIST:BOT_SMALL_HIT
    bot-small-hit-1.wav,bot-small-hit-2.wav #enddef

#define SOUND_LIST:BOT_SMALL_DIE
    bot-small-explosion-1.ogg,bot-small-explosion-2.ogg,bot-small-explosion-3.ogg #enddef

#define SOUND_LIST:GUN_ACTIVATE
    gun-activate-1.ogg,gun-activate-2.ogg #enddef

#define SET_TO_RECALL
	x,y="recall","recall" #enddef

#define RECALL DESC
	[recall]
		description={DESC}
	[/recall]
#enddef

#define RECALL_POS DESC X Y
	[recall]
		description={DESC}
		x,y={X},{Y}
	[/recall]
#enddef

#define RECALL_XFILTER XFILTER
	[recall]
		{XFILTER}
	[/recall]
#enddef

#define RECALL_LOYAL TYPE
	[if]
		[variable]
			name=var_loyal_{TYPE}
			not_equals=""
		[/variable]
		[then]
			[recall]
				description=$var_loyal_{TYPE}
			[/recall]
		[/then]
	[/if]
#enddef

#define RECALL_LOYAL_POS TYPE X Y
	[if]
		[variable]
			name=var_loyal_{TYPE}
			not_equals=""
		[/variable]
		[then]
			[recall]
				description=$var_loyal_{TYPE}
				x,y={X},{Y}
			[/recall]
		[/then]
	[/if]
#enddef

#define NOT_DESCRIPTION DESC
	[not]
		description={DESC}
	[/not]
#enddef

#define NOT_ROLE ROLEID
	[not]
		role={ROLEID}
	[/not]
#enddef

#define NOT_TYPE UNITID
	[not]
		type={UNITID}
	[/not]
#enddef

#define OR_DESCRIPTION DESC
	[or]
		description={DESC}
	[/or]
#enddef

#define OR_ROLE ROLEID
	[or]
		role={ROLEID}
	[/or]
#enddef

#define OR_TYPE UNITID
	[or]
		type={UNITID}
	[/or]
#enddef

#define HAVE_TYPE_ON_SIDE SIDE TYPE
	[have_unit]
		side={SIDE}
		type={TYPE}
	[/have_unit]
#enddef

#define OR_HAVE_TYPE_ON_SIDE SIDE TYPE
	[or]
		[have_unit]
			side={SIDE}
			type={TYPE}
		[/have_unit]
	[/or]
#enddef

#define RANDOM_TRAIT_UNIT STATS
	[unit]
		{STATS}
		random_traits=yes
	[/unit]
#enddef

#define FEMALE
	gender=female
#enddef

#define MALE
	gender=male
#enddef

############### FEMALE COUNTERPARTS OF BFW CORE MACROS ##############
# So that women won't hate me for having only male units :o

#define LOYAL_FEMALE_UNIT SIDE TYPE X Y DESCRIPTION USER_DESCRIPTION
	# Creates a unit with the Loyal trait. Should make the too vaguely named
	# UNIT macro above obsolete.
	#
	# Example:
	#! {LOYAL_FEMALE_UNIT 1 19 16 (Elvish Fighter) (Myname) ( _ "Myname")}
	#
	[unit]
		gender=female
		type={TYPE}
		description={DESCRIPTION}
		user_description={USER_DESCRIPTION}
		side={SIDE}
		x={X}
		y={Y}
		[modifications]
			{TRAIT_LOYAL}
		[/modifications]
	[/unit]
#enddef

#define FEMALE_UNIT TYPE DESCRIPTION UDESCRIPTION SIDE X Y
	# Create a female unit with the Loyal trait.
	#
	# Example:
	#! {FEMALE_UNIT (Elvish Archer) (Myname) ( _ "Myname") 1 1 1}
	#
	[unit]
		type={TYPE}
		description={DESCRIPTION}
		user_description={UDESCRIPTION}
		side={SIDE}
		x={X}
		y={Y}
		gender=female
		[modifications]
			{TRAIT_LOYAL}
		[/modifications]
	[/unit]
#enddef

#define GENERIC_FEMALE_UNIT SIDE TYPE X Y
	# Creates a generic female unit of TYPE belonging to SIDE at X,Y, which has a
	# random name and traits (just like a recruited unit).
	[unit]
		side={SIDE}
		type={TYPE}
		x={X}
		y={Y}
		gender=female
		generate_description=yes
		random_traits=yes
		upkeep=full
	[/unit]
#enddef

# Mostly hand-copied from 1.2.x-compatible A New Order campaign
# Updated 2007/09/25 to allow for multiple units
#define MAKE_LOYAL_XFILTER XFILTER DESCVAR
	[if]
		[have_unit]
			{XFILTER}
		[/have_unit]
		[then]
			{CLEAR_VARIABLE __utils_makeloyal_store}
			[store_unit]
				variable=__utils_makeloyal_store
				[filter]
					{XFILTER}
				[/filter]
			[/store_unit]
#textdomain wesnoth
			{FOREACH __utils_makeloyal_store k}
				{VARIABLE __utils_makeloyal_store[$k].upkeep loyal}
				{VARIABLE __utils_makeloyal_store[$k].modifications.trait[2].id loyal}
				{VARIABLE __utils_makeloyal_store[$k].modifications.trait[2].effect.apply_to loyal}
				{VARIABLE __utils_makeloyal_store[$k].modifications.trait[2].male_name ( _ "loyal")}
				{VARIABLE __utils_makeloyal_store[$k].modifications.trait[2].female_name ( _ "female^loyal")}
				{VARIABLE __utils_makeloyal_store[$k].modifications.trait[2].description ( _ "Zero upkeep")}
				{VARIABLE {DESCVAR} $__utils_makeloyal_store[$k].description}
				[unstore_unit]
					variable=__utils_makeloyal_store[$k]
					find_vacant=no
				[/unstore_unit]
			{NEXT k}
			{CLEAR_VARIABLE __utils_makeloyal_store}
		[/then]
	[/if]
#textdomain wesnoth-UInvasion
#enddef

#define CHANGE_SIDE_XFILTER XFILTER NEWSIDE
	[if]
		[have_unit]
			{XFILTER}
		[/have_unit]
		[then]
			{CLEAR_VARIABLE __utils_changeside_store}
			[store_unit]
				variable=__utils_changeside_store
				[filter]
					{XFILTER}
				[/filter]
			[/store_unit]
			{FOREACH __utils_changeside_store k}
				{VARIABLE __utils_changeside_store[$k].side {NEWSIDE} }
				[unstore_unit]
					variable=__utils_changeside_store[$k]
					find_vacant=no
				[/unstore_unit]
			{NEXT k}
			{CLEAR_VARIABLE __utils_changeside_store}
		[/then]
	[/if]
#enddef

# VARIATION: one of "",drake,swimmer,troll,wose,saurian,mounted,dwarf
#define ANONYMOUS_WC_GUARD VARIATION SIDE X Y
	[unit]
		type=Walking Corpse
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
		variation={VARIATION}
		[modifications]
			{TRAIT_UNDEAD}
		[/modifications]
	[/unit]
#enddef

#define ANONYMOUS_SOULLESS_GUARD VARIATION SIDE X Y
	[unit]
		type=Soulless
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
		variation={VARIATION}
		[modifications]
			{TRAIT_UNDEAD}
		[/modifications]
	[/unit]
#enddef

# -------------------------------------------------------------------
# HERO macro:
#   Creates a hero unit for SIDE at (X, Y), gives it a portrait if
#   applicable, and sets it with an additional trait. If you don't
#   want it to get any traits, set OPTIONAL_TRAIT to NULL. TRAIT_LOYAL
#   is, nevertheless, always applied along with the custom trait.
# -------------------------------------------------------------------

#define TRAIT_NONE
#enddef

#define HERO TYPE DESC UDESC SIDE X Y PORTRAIT OPTIONAL_TRAIT OTHER_STATS
	[unit]
		type={TYPE}
		gender={GENDER}
		description={DESC}
		user_description={UDESC}
		side={SIDE}
		x={X}
		y={Y}
		{IS_HERO}
		{OTHER_STATS}
		profile={PORTRAIT}
		unrenamable=yes

		[modifications]
			{TRAIT_LOYAL}
			{OPTIONAL_TRAIT}
		[/modifications]
	[/unit]
#enddef

#define ANONYMOUS_GUARD TYPE SIDE X Y
	[unit]
		type={TYPE}
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
	[/unit]
#enddef

#define ANONYMOUS_UNDEAD_GUARD TYPE SIDE X Y
	[unit]
		type={TYPE}
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
		[modifications]
			{TRAIT_UNDEAD}
		[/modifications]
	[/unit]
#enddef

#define ANONYMOUS_MECHANICAL_GUARD TYPE SIDE X Y
	[unit]
		type={TYPE}
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
		[modifications]
			{TRAIT_MECHANICAL}
		[/modifications]
	[/unit]
#enddef

#define LOYAL_GUARD TYPE DESC UDESC SIDE X Y TRAIT1 OTHER_STATS
	[unit]
		type={TYPE}
		description={DESC}
		user_description={UDESC}
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		{OTHER_STATS}

		[modifications]
			{TRAIT_LOYAL}
			{TRAIT1}
		[/modifications]
	[/unit]
#enddef

#define GUARD TYPE DESC UDESC SIDE X Y TRAIT1 TRAIT2
	[unit]
		type={TYPE}
		description={DESC}
		user_description={UDESC}
		side={SIDE}
		x={X}
		y={Y}

		ai_special=guardian

		[modifications]
			{TRAIT1}
			{TRAIT2}
		[/modifications]
	[/unit]
#enddef

#define IS_BOSS
	overlays=misc/boss-icon.png
#enddef

#define FACING_NORMAL
	facing=se
#enddef

#define FACING_REVERSE
	facing=sw
#enddef

#define ANONYMOUS_GUARD_REVERSE TYPE SIDE X Y
	[unit]
		{FACING_REVERSE}
		type={TYPE}
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
	[/unit]
#enddef

#define SET_FACING UNITFILTER FACING
	{CLEAR_VARIABLE __utils_facing_set_store}
	[store_unit]
		[filter]
			{UNITFILTER}
		[/filter]
		variable=__utils_facing_set_store
	[/store_unit]
	{FOREACH __utils_facing_set_store k}
		{VARIABLE (__utils_facing_set_store[$k].facing) ({FACING}) }
		[unstore_unit]
			variable=__utils_facing_set_store[$k]
			find_vacant=no
		[/unstore_unit]
	{NEXT k}
	{CLEAR_VARIABLE __utils_facing_set_store}
#enddef



