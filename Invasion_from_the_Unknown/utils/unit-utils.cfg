#textdomain wesnoth-Invasion_from_the_Unknown

#define SET_TO_RECALL
	x,y="recall","recall" #enddef

#define RECALL DESC
	[recall]
		description={DESC}
	[/recall]
#enddef

#define RECALL_POS DESC X Y
	[recall]
		description={DESC}
		x,y={X},{Y}
	[/recall]
#enddef

#define RECALL_XFILTER XFILTER
	[recall]
		{XFILTER}
	[/recall]
#enddef

#define RECALL_LOYAL TYPE
	[if]
		[variable]
			name=var_loyal_{TYPE}
			not_equals=""
		[/variable]
		[then]
			[recall]
				description=$var_loyal_{TYPE}
			[/recall]
		[/then]
	[/if]
#enddef

#define RECALL_LOYAL_POS TYPE X Y
	[if]
		[variable]
			name=var_loyal_{TYPE}
			not_equals=""
		[/variable]
		[then]
			[recall]
				description=$var_loyal_{TYPE}
				x,y={X},{Y}
			[/recall]
		[/then]
	[/if]
#enddef

#define NOT_DESCRIPTION DESC
	[not]
		description={DESC}
	[/not]
#enddef

#define NOT_ROLE ROLEID
	[not]
		role={ROLEID}
	[/not]
#enddef

#define NOT_TYPE UNITID
	[not]
		type={UNITID}
	[/not]
#enddef

#define OR_DESCRIPTION DESC
	[or]
		description={DESC}
	[/or]
#enddef

#define OR_ROLE ROLEID
	[or]
		role={ROLEID}
	[/or]
#enddef

#define OR_TYPE UNITID
	[or]
		type={UNITID}
	[/or]
#enddef

#define HAVE_TYPE_ON_SIDE SIDE TYPE
	[have_unit]
		side={SIDE}
		type={TYPE}
	[/have_unit]
#enddef

#define OR_HAVE_TYPE_ON_SIDE SIDE TYPE
	[or]
		[have_unit]
			side={SIDE}
			type={TYPE}
		[/have_unit]
	[/or]
#enddef

#define RANDOM_TRAIT_UNIT STATS
	[unit]
		{STATS}
		random_traits=yes
	[/unit]
#enddef

#define FEMALE
	gender=female
#enddef

#define MALE
	gender=male
#enddef

#define MAKE_MALE
	[+unit]
		gender=male
	[/unit]
#enddef

#define MAKE_FEMALE
	[+unit]
		gender=female
	[/unit]
#enddef

############### FEMALE COUNTERPARTS OF BFW CORE MACROS ##############
# So that women won't hate me for having only male units :o

#define LOYAL_FEMALE_UNIT SIDE TYPE X Y DESCRIPTION USER_DESCRIPTION
	{IFTU_DEPRECATION "LOYAL_FEMALE_UNIT" "0.3.0"}
	[unit]
		gender=female
		type={TYPE}
		description={DESCRIPTION}
		user_description={USER_DESCRIPTION}
		side={SIDE}
		x={X}
		y={Y}
		[modifications]
			{TRAIT_LOYAL}
		[/modifications]
	[/unit]
#enddef

#define FEMALE_UNIT TYPE DESCRIPTION UDESCRIPTION SIDE X Y
	{IFTU_DEPRECATION "FEMALE_UNIT" "0.3.0"}
	[unit]
		type={TYPE}
		description={DESCRIPTION}
		user_description={UDESCRIPTION}
		side={SIDE}
		x={X}
		y={Y}
		gender=female
		[modifications]
			{TRAIT_LOYAL}
		[/modifications]
	[/unit]
#enddef

#define GENERIC_FEMALE_UNIT SIDE TYPE X Y
	{IFTU_DEPRECATION "GENERIC_FEMALE_UNIT" "0.3.0"}
	[unit]
		side={SIDE}
		type={TYPE}
		x={X}
		y={Y}
		gender=female
		generate_description=yes
		random_traits=yes
		upkeep=full
	[/unit]
#enddef

# Mostly hand-copied from 1.2.x-compatible A New Order campaign
# Updated 2007/09/25 to allow for multiple units
#define MAKE_LOYAL_XFILTER XFILTER DESCVAR
	[if]
		[have_unit]
			{XFILTER}
		[/have_unit]
		[then]
			{CLEAR_VARIABLE __utils_makeloyal_store}
			[store_unit]
				variable=__utils_makeloyal_store
				[filter]
					{XFILTER}
				[/filter]
			[/store_unit]
#textdomain wesnoth
			{FOREACH __utils_makeloyal_store k}
				{VARIABLE __utils_makeloyal_store[$k].upkeep loyal}
				{VARIABLE __utils_makeloyal_store[$k].modifications.trait[2].id loyal}
				{VARIABLE __utils_makeloyal_store[$k].modifications.trait[2].effect.apply_to loyal}
				{VARIABLE __utils_makeloyal_store[$k].modifications.trait[2].male_name ( _ "loyal")}
				{VARIABLE __utils_makeloyal_store[$k].modifications.trait[2].female_name ( _ "female^loyal")}
				{VARIABLE __utils_makeloyal_store[$k].modifications.trait[2].description ( _ "Zero upkeep")}
				{VARIABLE {DESCVAR} $__utils_makeloyal_store[$k].description}
				[unstore_unit]
					variable=__utils_makeloyal_store[$k]
					find_vacant=no
				[/unstore_unit]
			{NEXT k}
			{CLEAR_VARIABLE __utils_makeloyal_store}
		[/then]
	[/if]
#textdomain wesnoth-Invasion_from_the_Unknown
#enddef

#define CHANGE_SIDE_XFILTER XFILTER NEWSIDE
	[if]
		[have_unit]
			{XFILTER}
		[/have_unit]
		[then]
			{CLEAR_VARIABLE __utils_changeside_store}
			[store_unit]
				variable=__utils_changeside_store
				[filter]
					{XFILTER}
				[/filter]
			[/store_unit]
			{FOREACH __utils_changeside_store k}
				{VARIABLE __utils_changeside_store[$k].side {NEWSIDE} }
				[unstore_unit]
					variable=__utils_changeside_store[$k]
					find_vacant=no
				[/unstore_unit]
			{NEXT k}
			{CLEAR_VARIABLE __utils_changeside_store}
		[/then]
	[/if]
#enddef

# VARIATION: one of "",drake,swimmer,troll,wose,saurian,mounted,dwarf
#define ANONYMOUS_WC_GUARD VARIATION SIDE X Y
	[unit]
		type=Walking Corpse
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
		variation={VARIATION}
		[modifications]
			{TRAIT_UNDEAD}
		[/modifications]
	[/unit]
#enddef

#define ANONYMOUS_SOULLESS_GUARD VARIATION SIDE X Y
	[unit]
		type=Soulless
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
		variation={VARIATION}
		[modifications]
			{TRAIT_UNDEAD}
		[/modifications]
	[/unit]
#enddef

# -------------------------------------------------------------------
# HERO macro:
#   Creates a hero unit for SIDE at (X, Y), gives it a portrait if
#   applicable, and sets it with an additional trait. If you don't
#   want it to get any traits, set OPTIONAL_TRAIT to NULL. TRAIT_LOYAL
#   is, nevertheless, always applied along with the custom trait.
# -------------------------------------------------------------------

#define TRAIT_NONE
#enddef

#define HERO TYPE DESC UDESC SIDE X Y PORTRAIT OPTIONAL_TRAIT OTHER_STATS
	[unit]
		type={TYPE}
		gender={GENDER}
		description={DESC}
		user_description={UDESC}
		side={SIDE}
		x={X}
		y={Y}
		{IS_HERO}
		{OTHER_STATS}
		profile={PORTRAIT}
		unrenamable=yes

		[modifications]
			{TRAIT_LOYAL}
			{OPTIONAL_TRAIT}
		[/modifications]
	[/unit]
#enddef

#define ANONYMOUS_GUARD TYPE SIDE X Y
	[unit]
		type={TYPE}
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
	[/unit]
#enddef

#define ANONYMOUS_UNDEAD_GUARD TYPE SIDE X Y
	{IFTU_DEPRECATION "ANONYMOUS_UNDEAD_GUARD" "0.3.0"}
	[unit]
		type={TYPE}
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
		[modifications]
			{TRAIT_UNDEAD}
		[/modifications]
	[/unit]
#enddef

#define ANONYMOUS_MECHANICAL_GUARD TYPE SIDE X Y
	{IFTU_DEPRECATION "ANONYMOUS_MECHANICAL_GUARD" "0.3.0"}
	[unit]
		type={TYPE}
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
		[modifications]
			{TRAIT_MECHANICAL}
		[/modifications]
	[/unit]
#enddef

#define LOYAL_GUARD TYPE DESC UDESC SIDE X Y TRAIT1 OTHER_STATS
	[unit]
		type={TYPE}
		description={DESC}
		user_description={UDESC}
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		{OTHER_STATS}

		[modifications]
			{TRAIT_LOYAL}
			{TRAIT1}
		[/modifications]
	[/unit]
#enddef

#define GUARD TYPE DESC UDESC SIDE X Y TRAIT1 TRAIT2
	[unit]
		type={TYPE}
		description={DESC}
		user_description={UDESC}
		side={SIDE}
		x={X}
		y={Y}

		ai_special=guardian

		[modifications]
			{TRAIT1}
			{TRAIT2}
		[/modifications]
	[/unit]
#enddef

#define IS_BOSS
	overlays=misc/boss-icon.png
	random_traits=no
#enddef

#define FACING_NORMAL
	facing=se
#enddef

#define FACING_REVERSE
	facing=sw
#enddef

#define ANONYMOUS_GUARD_REVERSE TYPE SIDE X Y
	{IFTU_DEPRECATION "ANONYMOUS_GUARD_REVERSE" "0.3.0"}
	[unit]
		{FACING_REVERSE}
		type={TYPE}
		side={SIDE}
		x={X}
		y={Y}
		ai_special=guardian
		upkeep=loyal
	[/unit]
#enddef

#define SET_FACING UNITFILTER FACING
	{CLEAR_VARIABLE __utils_facing_set_store}
	[store_unit]
		[filter]
			{UNITFILTER}
		[/filter]
		variable=__utils_facing_set_store
	[/store_unit]
	{FOREACH __utils_facing_set_store k}
		{VARIABLE (__utils_facing_set_store[$k].facing) ({FACING}) }
		[unstore_unit]
			variable=__utils_facing_set_store[$k]
			find_vacant=no
		[/unstore_unit]
	{NEXT k}
	{CLEAR_VARIABLE __utils_facing_set_store}
#enddef

# Moves a unit from its current location to the given location along a
# relatively straight line displaying the movement just like [move_unit_fake]
# does.
#
# Note that setting the destination on an existing unit does not kill either
# one, but causes the unit to move to the nearest vacant hex instead.
#define MOVE_UNIT_EX FILTER PATH_X PATH_Y TO_X TO_Y
	[store_unit]
		[filter]
			{FILTER}
		[/filter]
		variable=__utils_move_unit_ex_store
		kill=no
	[/store_unit]
	[scroll_to]
		x=$__utils_move_unit_ex_store.x
		y=$__utils_move_unit_ex_store.y
	[/scroll_to]
	{VARIABLE_OP __utils_move_unit_ex_path_x format ("$__utils_move_unit_ex_store.x|,{PATH_X},{TO_X}") }
	{VARIABLE_OP __utils_move_unit_ex_path_y format ("$__utils_move_unit_ex_store.y|,{PATH_Y},{TO_Y}") }
	[if]
		{VARIABLE_NUM_LESS_THAN ("__utils_move_unit_ex_store.x") ({TO_X}) }
		[then]
			{VARIABLE "__utils_move_unit_ex_store.facing" "se"}
		[/then]
		[else]
			[if]
				{VARIABLE_NUM_GREATER_THAN ("__utils_move_unit_ex_store.x") ({TO_X}) }
				[then]
					{VARIABLE "__utils_move_unit_ex_store.facing" "sw"}
				[/then]
			[/if]
		[/else]
	[/if]
	{VARIABLE __utils_move_unit_ex_store.x {TO_X} }
	{VARIABLE __utils_move_unit_ex_store.y {TO_Y} }
	[kill]
		{FILTER}
		animate=no
		fire_event=no
	[/kill]
	[move_unit_fake]
		type=$__utils_move_unit_ex_store.type
		gender=$__utils_move_unit_ex_store.gender
		variation=$__utils_move_unit_ex_store.variation
		side=$__utils_move_unit_ex_store.side
		x=$__utils_move_unit_ex_path_x
		y=$__utils_move_unit_ex_path_y
	[/move_unit_fake]
	[unstore_unit]
		variable=__utils_move_unit_ex_store
		find_vacant=yes
	[/unstore_unit]
	{REDRAW}
	{CLEAR_VARIABLE __utils_move_unit_ex_store}
	{CLEAR_VARIABLE __utils_move_unit_ex_path_x}
	{CLEAR_VARIABLE __utils_move_unit_ex_path_y}
#enddef

# Unsets ai_special=guardian on all units of a particular side
# Code taken from UtBS (1.3.x), by Rhuvaen
#define MOBILIZE_SIDE SIDE
	[store_unit]
		variable=enemy
		kill=yes
		[filter]
		side={SIDE}
		[/filter]
	[/store_unit]
	{FOREACH enemy i}
		{CLEAR_VARIABLE enemy[$i].ai_special}
		[unit]
			side={SIDE}
			type=$enemy[$i].type
			user_description=$enemy[$i].user_description
			facing=$enemy[$i].facing
			gender=$enemy[$i].gender
			variation=$enemy[$i].variation
			x=$enemy[$i].x
			y=$enemy[$i].y
			hitpoints=$enemy[$i].hitpoints
			random_traits=no
			canrecruit=$enemy[$i].canrecruit
			experience=$enemy[$i].experience
			role=$enemy[$i].role
			moves=$enemy[$i].moves
			attacks_left=$enemy[$i].attacks_left
			[status]
				slowed=$enemy[$i].status.slowed
				poisoned=$enemy[$i].status.poisoned
			[/status]
			[variables]
				dehydrated=$enemy[$i].variables.dehydrated
				full_hitpoints=$enemy[$i].variables.full_hitpoints
				max_hitpoints=$enemy[$i].variables.max_hitpoints
			[/variables]
		[/unit]
	{NEXT i}
#enddef


#define RANDOM_PLACEMENT_AREA X Y RADIUS
	# set a placement area for subsequent random placement of units
	[store_locations]
		x,y={X},{Y}
		radius={RADIUS}
		variable=random_placement_locations
	[/store_locations]
	{VARIABLE_OP random_string format "0..$random_placement_locations.length"}
#enddef

#define PLACE_UNITS_RANDOMLY NUM SIDE TYPE DESCRIPTION USER_DESCRIPTION OTHER
	{VARIABLE number {NUM}}
	{VARIABLE i 0}
	[while]
		[variable]
			name=i
			less_than=$number
		[/variable]
		[do]
			{RANDOM $random_string}
			{VARIABLE random_placement_x $random_placement_locations[$random].x}
			{VARIABLE random_placement_y $random_placement_locations[$random].y}
	
			[unit]
				side={SIDE}
				type={TYPE}
				x=$random_placement_x
				y=$random_placement_y
				description={DESCRIPTION}
				user_description={USER_DESCRIPTION}
				upkeep=full
				animate=yes
				{OTHER}
			[/unit]
			
			{VARIABLE_OP i add 1}
		[/do]
	[/while]
#enddef

#define CLEAR_PLACEMENT_AREA
	{CLEAR_VARIABLE random_string}
	{CLEAR_VARIABLE random_placement_x}
	{CLEAR_VARIABLE random_placement_y}
	{CLEAR_VARIABLE random_placement_locations}
#enddef

#!***Macro to random place unit within area***
#define RANDOM_PLACEMENT X Y RADIUS UNIT
	[store_locations]
		x,y={X},{Y}
		radius={RADIUS}
		variable=random_placement_locations
	[/store_locations]

	{VARIABLE_OP random_string format "0..$random_placement_locations.length"}

	{RANDOM $random_string}

	{VARIABLE_OP random_placement_x format "$random_placement_locations[$random].x"}
	{VARIABLE_OP random_placement_y format "$random_placement_locations[$random].y"}

	{CLEAR_VARIABLE random_placement_locations}

	{UNIT}

	[+unit]
		x,y=$random_placement_x,$random_placement_y
	[/unit]
#enddef
