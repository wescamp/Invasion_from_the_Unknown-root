#textdomain wesnoth-Invasion_from_the_Unknown

#ifdef VOID
	#undef VOID
#endif

#ifdef NULL
	#undef NULL
#endif

#ifdef COMMAND
	#undef COMMAND
#endif

# The VOID macro
#define VOID
#enddef
#define NULL
#enddef

# Macro which allows to add dummy translator notes, so that they do get to appear
# in wmlxgettext's output but are ignored by the game.
#define DUMMY FOOBAR
#enddef

# For code that ought to be executed in a guaranteed order
#define COMMAND _IN
	[command]
		{_IN}
	[/command]
#enddef

#define OR _IN
	[or]
		{_IN}
	[/or]
#enddef

#define AND _IN
	[and]
		{_IN}
	[/and]
#enddef

#define NOT _IN
	[not]
		{_IN}
	[/not]
#enddef

#define VARIABLE_ADD VAR_ID RVALUE
	{VARIABLE_OP {VAR_ID} add {RVALUE} }#enddef
#define VARIABLE_MINUS VAR_ID RVALUE
	{VARIABLE_OP {VAR_ID} add -{RVALUE} }#enddef
#define VARIABLE_MULTIPLY VAR_ID RVALUE
	{VARIABLE_OP {VAR_ID} multiply {RVALUE} }#enddef
#define VARIABLE_DIVIDE VAR_ID RVALUE
	{VARIABLE_OP {VAR_ID} divide {RVALUE} }#enddef
#define VARIABLE_MOD VAR_ID RVALUE
	{VARIABLE_OP {VAR_ID} modulo {RVALUE} }#enddef
#define VARIABLE_NEGATE VAR_ID
	{VARIABLE_OP {VAR_ID} multiply -1}#enddef
#define VARIABLE_RANDOM VAR_ID RVALUE
	{VARIABLE_OP {VAR_ID} random {RVALUE} }#enddef

# short aliases

#define VARIABLE_RAND VAR_ID RVALUE
	{VARIABLE_RANDOM {VAAR_ID} {RVALUE} }#enddef

#define VARIABLE_INC VAR_ID
	{VARIABLE_OP {VAR_ID} add (1) }#enddef
#define VARIABLE_DEC VAR_ID
	{VARIABLE_OP {VAR_ID} add (-1) }#enddef

#define VARIABLE_NUM_EQUALS VAR_ID RVALUE
	[variable]
		name={VAR_ID}
		numerical_equals={RVALUE}
	[/variable]
#enddef

#define VARIABLE_NUM_NOT_EQUALS VAR_ID RVALUE
	[variable]
		name={VAR_ID}
		numerical_not_equals={RVALUE}
	[/variable]
#enddef

#define VARIABLE_NUM_LESS_THAN VAR_ID RVALUE
	[variable]
		name={VAR_ID}
		less_than={RVALUE}
	[/variable]
#enddef

#define VARIABLE_NUM_GREATER_THAN VAR_ID RVALUE
	[variable]
		name={VAR_ID}
		greater_than={RVALUE}
	[/variable]
#enddef

#define VARIABLE_NUM_LESS_OR_EQUAL_THAN VAR_ID RVALUE
	[variable]
		name={VAR_ID}
		less_than_equal_to={RVALUE}
	[/variable]
#enddef

#define VARIABLE_NUM_GREATER_OR_EQUAL_THAN VAR_ID RVALUE
	[variable]
		name={VAR_ID}
		greater_than_equal_to={RVALUE}
	[/variable]
#enddef

#define VARIABLE_LEXICAL_EQUALS VAR_ID RVALUE
	[variable]
		name={VAR_ID}
		equals={RVALUE}
	[/variable]
#enddef

#define VARIABLE_LEXICAL_NOT_EQUALS VAR_ID RVALUE
	[variable]
		name={VAR_ID}
		not_equals={RVALUE}
	[/variable]
#enddef

#define VARIABLE_BOOLEAN_EQUALS VAR_ID RVALUE
	[variable]
		name={VAR_ID}
		boolean_equals={RVALUE}
	[/variable]
#enddef

#define VARIABLE_BOOLEAN_NOT_EQUALS VAR_ID RVALUE
	[not]
		[variable]
			name={VAR_ID}
			boolean_equals={RVALUE}
		[/variable]
	[/not]
#enddef

#define CAPTURE_VILLAGE SIDE X Y
	[capture_village]
		side={SIDE}
		x={X}
		y={Y}
	[/capture_village]
#enddef

#define RETRIEVE_GOLD AMOUNT
	[sound]
		name=gold.ogg
	[/sound]
	
	[message]
		speaker=narrator
		image="items/gold-coins-medium.png"
		message= _ "You retrieve {AMOUNT} pieces of gold."
	[/message]
	
	[gold]
		side=1
		amount={AMOUNT}
	[/gold]
#enddef

#define RECEIVE_GOLD AMOUNT
	[sound]
		name=gold.ogg
	[/sound]
	
	[message]
		speaker=narrator
		image="items/gold-coins-medium.png"
		message= _ "You receive {AMOUNT} pieces of gold!"
	[/message]
	
	[gold]
		side=1
		amount={AMOUNT}
	[/gold]
#enddef

#define ADD_GOLD SIDE ONEASY ONMEDIUM ONHARD
	[gold]
		side={SIDE}
		{QUANTITY amount {ONEASY} {ONMEDIUM} {ONHARD} }
	[/gold]
#enddef

#define SET_GOLD SIDE ONEASY ONMEDIUM ONHARD
	[modify_side]
		side={SIDE}
		{QUANTITY gold {ONEASY} {ONMEDIUM} {ONHARD} }
	[/modify_side]
#enddef

# Does a gameview area shift (a.k.a. [scroll])
#define SHIFT X Y
	[scroll]
		x,y={X},{Y}
	[/scroll]
#enddef

#define SCROLL_TO X Y
	[scroll_to]
		x,y={X},{Y}
	[/scroll_to]
#enddef

#define SCROLL_TO_UNIT DESC
	[scroll_to_unit]
		description={DESC}
	[/scroll_to_unit]
#enddef

#define DELAY TIMEOUT
	[delay]
		time={TIMEOUT}
	[/delay]
#enddef

#define REDRAW
	[redraw]
		side=1
	[/redraw]
#enddef

#define REDRAW_LOOP MS
	{VARIABLE (__redraw_loop_j) (0)}
	[while]
		{VARIABLE_NUM_LESS_THAN (__redraw_loop_j) ({MS})}
		[do]
			{REDRAW}
			{DELAY 0}
			{VARIABLE_ADD (__redraw_loop_j) (1)}
		[/do]
	[/while]
	{CLEAR_VARIABLE (__redraw_loop_j)}
#enddef

#define ALLOW_UNDO
	[allow_undo]
	[/allow_undo]
#enddef

#define MSG_SPEAKER SPEAKER TEXT
	[message]
		speaker={SPEAKER}
		message={TEXT}
	[/message]
#enddef

#define MSG_UNIT DESC TEXT
	[message]
		description={DESC}
		message={TEXT}
	[/message]
#enddef

#define MSG_SUF SUF TEXT
	[message]
		{SUF}
		message={TEXT}
	[/message]
#enddef

#define MSG_ROLE ROLE TEXT
	[message]
		role={ROLE}
		message={TEXT}
	[/message]
#enddef

#define MSG_NARRATOR TEXT
	[message]
		speaker=narrator
		image="wesnoth-icon.png"
		message={TEXT}
	[/message]
#enddef

#define MSG_INNER TEXT
	[message]
		speaker=narrator
		message={TEXT}
	[/message]
#enddef

#define CUSTOM_MSG IMAGE TEXT
	[message]
		speaker=narrator
		image={IMAGE}
		message={TEXT}
	[/message]
#enddef

